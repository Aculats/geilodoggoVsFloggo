{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/home/home.page.ts","./src/app/smileyhunting/smileyhunting.component.ts","./src/app/home/home.page.css","./src/app/smileyhunting/smileyhunting.component.css","./src/app/home/home.page.html","./src/app/smileyhunting/smileyhunting.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;;;;ACtCnC;IAOrC,QAAQ,SAAR,QAAQ;IAInB,gBAAe,CAAC;IAFhB,QAAQ,KAAG,CAAC;IAIZ,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IAAA,CAAC;IAEF,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IAC5D,CAAC;IAAA,CAAC;IAEF,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAAA,CAAC;IAEF,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC;CAEF;;AAtBY,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yEAA6B;;KAE9B,CAAC;GACW,QAAQ,CAsBpB;AAtBoB;;;;;;;;;;;;;;;;;;;;;;;;;ACPoC;AAEmC;AAGtC;IAQzC,sBAAsB,SAAtB,sBAAsB;IAqBjC,YAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QARrD,cAAS,GAAe,EAAE,CAAC;QAI3B,kBAAa,GAAG,IAAI,qDAAS,CAAC;YAC5B,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;SAC9B,CAAC;IAGF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ,CAAC,MAAM;QACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC;IACtD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAGD,UAAU;QACR,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,WAAW,GAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAE,IAAI,CAAC,kBAAkB,GAAC,CAAC;IACpD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,SAAS,GAAC,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAE,IAAI,CAAC,gBAAgB,GAAC,CAAC;IAChD,CAAC;IAED,IAAI;IAEJ,CAAC;CACF;;YAvEQ,8DAAe;;;uBAUrB,gDAAK;;AAFK,sBAAsB;IANlC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,uFAA2C;;KAE5C,CAAC;GAEW,sBAAsB,CA+DlC;AA/DkC;;;;;;;;;;;;;ACbnC,+DAAe,mBAAmB,sBAAsB,KAAK,kBAAkB,yBAAyB,qBAAqB,gCAAgC,mBAAmB,KAAK,+CAA+C,meAAme,E;;;;;;;;;;;;ACAvsB,+DAAe,cAAc,oBAAoB,oBAAoB,KAAK,eAAe,oBAAoB,oBAAoB,KAAK,iBAAiB,uBAAuB,yBAAyB,OAAO,UAAU,4BAA4B,uBAAuB,KAAK,YAAY,yBAAyB,KAAK,+CAA+C,uzBAAuzB,E;;;;;;;;;;;;ACAhqC,+DAAe,m+BAAm+B,E;;;;;;;;;;;;ACAl/B,+DAAe,8bAA8b,sBAAsB,gDAAgD,oBAAoB,8YAA8Y,E","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.css'],\r\n})\r\nexport class HomePage implements OnInit{\r\n\r\n  ngOnInit(){}\r\n\r\n  constructor() {}\r\n\r\n  newEntry(): void {\r\n    console.log(\"Neuer Eintrag wurde ausgewählt\");\r\n  };\r\n\r\n  listRegistrations(): void {\r\n    console.log(\"Übersicht der Anmeldungen wurde ausgewählt\");\r\n  };\r\n\r\n  deleteEntry(): void {\r\n    console.log(\"Teilnehmer entfernen wurde ausgewählt\");\r\n  };\r\n\r\n  openSettings() {\r\n    console.log(\"Settings öffnen\");\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CalendarComponentOptions } from 'ion2-calendar';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { Customer } from '../interface/customerInferface';\r\nimport { CustomerService } from '../customer.service';\r\n\r\n@Component({\r\n  selector: 'app-smileyhunting',\r\n  templateUrl: 'smileyhunting.component.html',\r\n  styleUrls: ['smileyhunting.component.css'],\r\n})\r\n\r\nexport class SmileyHuntingComponent implements OnInit {\r\n\r\n  @Input()\r\n  customer: Customer;\r\n\r\n  public userIdHunting: number;\r\n  public greenSmiley: number;\r\n  public redSmiley: number;\r\n  public greenSmileySession: number;\r\n  public redSmileySession: number;\r\n  \r\n  calendarDate: string;\r\n  type: 'string';\r\n  customers: Customer[] = [];\r\n  \r\n  \r\n\r\n  customersForm = new FormGroup({\r\n    username: new FormControl(''),\r\n  })\r\n\r\n  constructor(private customersService: CustomerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.greenSmileySession = 0\r\n    this.redSmileySession = 0\r\n    this.userIdHunting = this.customersService.userIdHuntingService; \r\n    this.greenSmiley = this.customersService.getGreenSmileys(this.userIdHunting);\r\n    this.redSmiley = this.customersService.getRedSmileys(this.userIdHunting);\r\n  }\r\n\r\n  onChange($event) {\r\n    console.log($event);\r\n    var s = new Date($event).toLocaleDateString(\"en-US\")\r\n  }\r\n\r\n  backToHome(): void{\r\n    this.customersForm.reset();\r\n    console.log(\"zurück zum Menü\");\r\n  }\r\n\r\n  submit(): void{\r\n    this.customersService.setGreenSmileys(this.greenSmiley)\r\n    this.customersService.setRedSmileys(this.redSmiley)\r\n    this.customersService.updateCustomer(this.userIdHunting);\r\n    this.customersForm.reset();\r\n  }\r\n\r\n\r\n  greensmile() { \r\n    this.greenSmiley= this.greenSmiley+1\r\n    this.greenSmileySession= this.greenSmileySession+1\r\n  }\r\n\r\n  redsmile() {\r\n    this.redSmiley= this.redSmiley+1\r\n    this.redSmileySession= this.redSmileySession+1\r\n  }\r\n\r\n  save() {\r\n\r\n  }\r\n}","export default \"\\r\\n.button-group{\\r\\n  margin-top: 25%;\\r\\n}\\r\\n\\r\\n.button  {\\r\\n  text-align: center;\\r\\n  display: block;\\r\\n  margin-top: 1% !important;\\r\\n  margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUucGFnZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZCIsImZpbGUiOiJob21lLnBhZ2UuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5idXR0b24tZ3JvdXB7XHJcbiAgbWFyZ2luLXRvcDogMjUlO1xyXG59XHJcblxyXG4uYnV0dG9uICB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi10b3A6IDElICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59Il19 */\";","export default \".greensmile {\\r\\n    width: 100%;\\r\\n    height: 40%;\\r\\n}\\r\\n.redsmile {\\r\\n    width: 100%;\\r\\n    height: 40%;\\r\\n}\\r\\n.inline-div {\\r\\n    display: block;\\r\\n    text-align: left;\\r\\n  }\\r\\np\\r\\n{\\r\\n  display: inline-block;\\r\\n  text-align: left;\\r\\n}\\r\\n.header{\\r\\n    margin-left: 10%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtaWxleWh1bnRpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7QUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7RUFDbEI7QUFHRjs7RUFFRSxxQkFBcUI7RUFDckIsZ0JBQWdCO0FBQ2xCO0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic21pbGV5aHVudGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZWVuc21pbGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDQwJTtcclxufVxyXG4ucmVkc21pbGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDQwJTtcclxufVxyXG5cclxuLmlubGluZS1kaXYge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuXHJcbiAgXHJcbnBcclxue1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uaGVhZGVye1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcclxufSJdfQ== */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Hauptmenü\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-header collapse=\\\"condense\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-title size=\\\"large\\\">Hier könnte Ihre Werbung stehen!</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n<div class=\\\"button-group\\\">\\r\\n    <ion-button  id=\\\"newEntryButton\\\" text=\\\"Neuer Eintrag\\\" (click)=\\\"newEntry()\\\" class=\\\"button\\\" [routerLink]=\\\"['/newsignup']\\\">Neuer Smileyhunter</ion-button>\\r\\n    <ion-button  id=\\\"listRegistrationsButton\\\" text=\\\"Übersicht der Anmeldungen\\\" (click)=\\\"listRegistrations()\\\" class=\\\"button\\\" [routerLink]=\\\"['/listregistrations']\\\">Übersicht der Hunter</ion-button>\\r\\n    <ion-button  id=\\\"settingsButton\\\" text=\\\"Einstellungen öffnen\\\" (click)=\\\"openSettings()\\\" class=\\\"button\\\" [routerLink]=\\\"['/settings']\\\">Highscores/Ranking</ion-button>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-title>\\r\\n        Smileyhunting\\r\\n      </ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  <ion-content [fullscreen]=\\\"true\\\">\\r\\n\\r\\n    <ion-header collapse=\\\"condense\\\">\\r\\n      <ion-toolbar>\\r\\n        <ion-title size=\\\"large\\\">Smileyhunting</ion-title>\\r\\n      </ion-toolbar>\\r\\n    </ion-header>\\r\\n    <div class=\\\"inline-div\\\">\\r\\n      <p>Smileys Grün {{ greenSmileySession }}</p>\\r\\n      <p class=\\\"header\\\">Smileys Rot {{ redSmileySession }}</p>\\r\\n    </div>\\r\\n    <ion-button type=\\\"submit\\\" id=\\\"save\\\" text=\\\"Eintrag speichern\\\"  (click)=\\\"submit()\\\"  class=\\\"button\\\" [routerLink]=\\\"['/home']\\\">Eintrag speichern</ion-button>\\r\\n    <ion-button color=\\\"success\\\" class=\\\"greensmile\\\" (click)=\\\"greensmile()\\\"></ion-button>\\r\\n    <ion-button color=\\\"danger\\\" class=\\\"redsmile\\\" (click)=\\\"redsmile()\\\"></ion-button>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}